Testeando en la nube
====================
:author: JJ Merelo
:email: jjmerelo@gmail.com
:description: Presentación para Barcelona Perl Workshop
:backend:   deckjs
:max-width: 50em
:data-uri:
:revnumber: 0.1
:deckjs_theme: swiss
:deckjs_transition: horizontal-slide
:icons:


Comprad el libro
----------------

[[libro_image]]
image::esquina.png[]

Un acercamiento a Perl desde la literatura
------------------------------------------

O de la literatura a DevOps pasando por Nueva York.

Y a la escritura de un libro
----------------------------

Bueno, de varios...

image::esquina.png[Portada del libro]


Escribir un libro es como desarrollar software
----------------------------------------------

[incremental="true"]
- Prepara tus herramientas
- Escribe
- Comprueba lo escrito
- Publica

O, dicho de otro modo
---------------------

[incremental="true"]
- Provisiona
- Código, código, código
- Test - integración continua
- Despliega

Cómo testear en la nube. 1. Añadir ficheros de test
---------------------------------------------------

[source,perl,numbered]
.test-hoborg.t
----
my $hoborg = new Text::Hoborg;
my $dir = $hoborg->dir();
diag( "Testing Text::Hoborg $Text::Hoborg::VERSION in $dir" );
$speller->add_dic("$dir/words.dic");
my @words = split /\s+/, $hoborg->text;
my $word_re = qr/([\w\'áéíóúÁÉÍÓÚñÑ]+)/;
for my $w (@words) {
  my ($stripped_word) = ( $w =~ $word_re );
  ok( $speller->check( $stripped_word), "Checking $stripped_word in text")   if ( $stripped_word ) ;
}
----

Un testeo pide integración continua
-----------------------------------

[source,txt,numbered]
.travis.yml

language: perl
perl:
  - "5.16"
before_install:
  - sudo apt-get install libhunspell-1.3-0 hunspell-en-us libhunspell-dev
  - cd Text-Hoborg
script: "perl Makefile.PL && make test"


2. Lo mismo, pero con Aspell
----------------------------

[source,perl,numbered]
.test-hashlash.t
----
use Text::Aspell;
BEGIN {
use_ok( 'Text::HashSlash' );
}
my $dict_dir;
my $speller = Text::Aspell->new;
die unless $speller;
$speller->set_option('lang','es');
my $hashslash = new Text::HashSlash;
my $dir = $hashslash->abs_dir();
diag( "Testing Text::HashSlash $Text::HashSlash::VERSION in $dir" );
$speller->set_option('personal',"$dir/.aspell.es.pws");
----

¿Por qué `Aspell`?
------------------

Error de codificación en el diccionario por omisión. Consulta al autor de `Text::Hunspell`, sin éxito.

¿Pero hace falta Perl?
---------------------

No:
[source,txt,numbered]
language: C
before_install:
  - sudo apt-get install aspell-es 
script: OUTPUT=`cat README.md | aspell list -d es -p ./.aspell.es.pws`; if [ -n "$OUTPUT" ]; then echo $OUTPUT; exit 1; fi

Muy alejado del parnaso
-----------------------

[incremental="true"]
- Demasiado raro.
- Sólo un fichero para comprobar.
- *Hacke-y*

NOTE: ¡No cuenta palabras!

Volvamos a Perl
---------------





